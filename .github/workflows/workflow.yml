# name: Kubescape Scan

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   kubescape_scan:
#     runs-on: ubuntu-latest
#     permissions:
#       actions: read
#       contents: read
#       security-events: write

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Minikube
#         uses: medyagh/setup-minikube@latest
#         with:
#           kubernetes-version: 'latest'

#       - name: Wait for Minikube to be Ready
#         run: kubectl wait --for=condition=ready node/minikube --timeout=60s

#       - name: Install Kubescape (if not already present)
#         run: |
#           if ! command -v kubescape &> /dev/null; then
#             curl -s https://raw.githubusercontent.com/armosec/kubescape/master/install.sh | sudo bash
#           fi
#           kubescape version

#       # - name: Run Kubescape Scan and Add to Summary
#       #   run: |
#       #     echo "## Kubescape Scan Summary" >> $GITHUB_STEP_SUMMARY
#       #     kubescape scan --format pretty-printer | sed -e 's/\x1B\[[0-9;]*[mG]//g' >> $GITHUB_STEP_SUMMARY

#       - name: Run Kubescape Scan and Add to Summary
#         run: |
#           echo "## Kubescape Scan Summary" >> $GITHUB_STEP_SUMMARY
#           #kubescape scan framework nsa -v --format pretty-printer | sed -e 's/\x1B\[[0-9;]*[mG]//g' | sed 's/^┌/|/g; s/┐$/|/g; s/├/|/g; s/┤$/|/g; s/│/|/g; s/└/|/g; s/┘$/|/g' >> $GITHUB_STEP_SUMMARY
#           kubescape scan framework nsa -v --format pretty-printer >> $GITHUB_STEP_SUMMARY





name: Kubescape Scan

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  kubescape_scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest
        with:
          kubernetes-version: 'latest'

      - name: Wait for Minikube to be Ready
        run: kubectl wait --for=condition=ready node/minikube --timeout=60s

      - name: Install Kubescape (if not already present)
        run: |
          if ! command -v kubescape &> /dev/null; then
            curl -s https://raw.githubusercontent.com/armosec/kubescape/master/install.sh | sudo bash
          fi
          kubescape version

      - name: Run Kubescape Scan
        id: kubescape-scan
        run: kubescape scan framework nsa -v --format json --output kubescape_report.json

      - name: Format Kubescape Results
        if: always()
        run: |
          if [ -f kubescape_report.json ]; then
            report=$(cat kubescape_report.json | jq -r '.summaryDetails.controls | to_entries[] |
              "################################################################################\\n" +
              "Control Name: \(.value.name)\\n" +
              "Status: \(.value.status)\\n" +
              "Category: \(.value.category.name)\\n" +
              "Score: \(.value.score)\\n\\n" +
              "Failed Resources:\\n" +
              (if .value.status == "failed" and (.value | has("resourceIDs")) then
                (.value.resourceIDs | keys | map("  - \(.)") | join("\\n"))
              else
                "  No failed resources for this control"
              end) + "\\n\\n"'
            )
            echo "## Kubescape Scan Results (NSA Framework)" >> $GITHUB_STEP_SUMMARY
            echo "$report" >> $GITHUB_STEP_SUMMARY
          else
            echo "## Kubescape Scan Results (NSA Framework)" >> $GITHUB_STEP_SUMMARY
            echo "No Kubescape report file found." >> $GITHUB_STEP_SUMMARY
          fi

      