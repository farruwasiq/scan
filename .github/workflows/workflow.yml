name: Kubescape Scan and GitHub Summary

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  kubescape_scan_summary:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest
        with:
          kubernetes-version: 'latest'

      - name: Wait for Minikube to be Ready
        run: kubectl wait --for=condition=ready node/minikube --timeout=60s

      - name: Install Kubescape (if not already present)
        run: |
          if ! command -v kubescape &> /dev/null; then
            curl -s https://raw.githubusercontent.com/armosec/kubescape/master/install.sh | sudo bash
          fi
          kubescape version

      - name: Run Kubescape Scan and Generate JSON Report
        id: run_kubescape_scan
        run: |
          kubescape scan framework nsa -v --format json --output kubescape_report.json
          # Check the output of the Kubescape scan
          if [ ! -s "kubescape_report.json" ]; then
            echo "Error: kubescape_report.json is empty or does not exist.  The Kubescape scan may have failed."
            exit 1
          else
            echo "Kubescape scan completed successfully. Output written to kubescape_report.json"
            cat kubescape_report.json
          fi

      - name: Summarize Kubescape Scan Results
        if: success()
        run: |
          # Install jq
          sudo apt-get update
          sudo apt-get install -y jq

          # Read the JSON report and construct the complete summary in a single jq command
          report_json=$(cat kubescape_report.json)
          
          echo "$report_json" | jq -r \
            '
              # Helper function to handle null values
              def null_to_zero: if . == null then 0 else . end;
              
              # Extract summary information
              . as $report |
              
              "## Kubescape Scan Summary\n\n" +
              "| Total Controls | Failed Controls | Passed Controls | Compliance |\n" +
              "|---|---|---|---|\n" +
              "| \(($report.Summary.TotalResources | null_to_zero)) | \($report.Summary.FailedResources | null_to_zero) | \($report.Summary.TotalResources | null_to_zero - $report.Summary.FailedResources | null_to_zero) | \((100 - ($report.Summary.FailedResources | null_to_zero) / ($report.Summary.TotalResources | null_to_zero) * 100) | to_number | printf "%.2f%%") |\n\n" +
              
              "### Failed Controls\n\n" +
              (if ($report.Results | length) > 0 then
                "| Severity | Control Name | Docs | Assisted Remediation |\n" +
                "|---|---|---|---|\n" +
                ($report.Results | map(select(.Status == "failed")) | 
                 map("|\(.Severity) | \(.Name) | [Link](https://hub.armosec.io/docs/\(.ControlID)) | \(.Remediation) |") | 
                 join("\n"))
              else
                "No failed controls found."
              end)
            ' >> $GITHUB_STEP_SUMMARY
