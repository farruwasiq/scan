# name: Kubescape Scan

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   kubescape_scan:
#     runs-on: ubuntu-latest
#     permissions:
#       actions: read
#       contents: read
#       security-events: write

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Minikube
#         uses: medyagh/setup-minikube@latest
#         with:
#           kubernetes-version: 'latest'

#       - name: Wait for Minikube to be Ready
#         run: kubectl wait --for=condition=ready node/minikube --timeout=60s

#       - name: Install Kubescape (if not already present)
#         run: |
#           if ! command -v kubescape &> /dev/null; then
#             curl -s https://raw.githubusercontent.com/armosec/kubescape/master/install.sh | sudo bash
#           fi
#           kubescape version

#       # - name: Run Kubescape Scan and Add to Summary
#       #   run: |
#       #     echo "## Kubescape Scan Summary" >> $GITHUB_STEP_SUMMARY
#       #     kubescape scan --format pretty-printer | sed -e 's/\x1B\[[0-9;]*[mG]//g' >> $GITHUB_STEP_SUMMARY

#       - name: Run Kubescape Scan and Add to Summary
#         run: |
#           echo "## Kubescape Scan Summary" >> $GITHUB_STEP_SUMMARY
#           #kubescape scan framework nsa -v --format pretty-printer | sed -e 's/\x1B\[[0-9;]*[mG]//g' | sed 's/^┌/|/g; s/┐$/|/g; s/├/|/g; s/┤$/|/g; s/│/|/g; s/└/|/g; s/┘$/|/g' >> $GITHUB_STEP_SUMMARY
#           kubescape scan framework nsa -v --format pretty-printer >> $GITHUB_STEP_SUMMARY





name: Kubescape Scan and Slack Report

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  kubescape_scan_slack:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest
        with:
          kubernetes-version: 'latest'

      - name: Wait for Minikube to be Ready
        run: kubectl wait --for=condition=ready node/minikube --timeout=60s

      - name: Install Kubescape (if not already present)
        run: |
          if ! command -v kubescape &> /dev/null; then
            curl -s https://raw.githubusercontent.com/armosec/kubescape/master/install.sh | sudo bash
          fi
          kubescape version

      - name: Run Kubescape Scan
        id: kubescape-scan
        run: kubescape scan framework nsa -v --format json --output kubescape_report.json

      - name: Install Python and fpdf2
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip install fpdf2

      - name: Generate PDF Report
        run: python .github/workflows/generate_pdf_report.py kubescape_report.json kubescape_report.pdf

      - name: Slack Notification
        uses: slackapi/slack-github-action/slack@v5
        with:
          slack-webhook-uri: ${{ secrets.SLACK_WEBHOOK_URI }}
          files: kubescape_report.pdf
          title: "Kubescape Scan Report"
          initial-comment: "Kubescape scan report for the latest commit on ${{ github.ref_name }}"

      